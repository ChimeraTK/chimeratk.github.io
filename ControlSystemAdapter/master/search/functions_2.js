var searchData=
[
  ['close_411',['close',['../struct_process_array_factory_backend.html#aed60121d04d6a727050f459d9e55c11e',1,'ProcessArrayFactoryBackend']]],
  ['constceil_412',['constceil',['../stresstest_8cpp.html#ad401aaec85d544bc15d5ceeb4ab51a20',1,'stresstest.cpp']]],
  ['countlinesinfile_413',['countLinesInFile',['../test_persistent_data_storage_8cpp.html#aa50d426623b15cb4352f20ca3ac69ea6',1,'testPersistentDataStorage.cpp']]],
  ['createbidirectionalprocessarray_414',['createBidirectionalProcessArray',['../class_chimera_t_k_1_1_p_v_manager.html#a3523b4a0f785b773f6ebf07a0a0c49e5',1,'ChimeraTK::PVManager']]],
  ['createbidirectionalsynchronizedprocessarray_415',['createBidirectionalSynchronizedProcessArray',['../namespace_chimera_t_k.html#ad9aabee6f1b52f3c1fb9c870c87fc1ab',1,'ChimeraTK::createBidirectionalSynchronizedProcessArray(std::size_t size, const ChimeraTK::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, T initialValue=T(), std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})'],['../namespace_chimera_t_k.html#a8ac9be97863e3d082eeeb0460dc67452',1,'ChimeraTK::createBidirectionalSynchronizedProcessArray(const std::vector&lt; T &gt; &amp;initialValue, const ChimeraTK::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})']]],
  ['createinstance_416',['createInstance',['../struct_process_array_factory_backend.html#a6e09653a89bf248d6f3876b36f7b1638',1,'ProcessArrayFactoryBackend']]],
  ['createprocessarray_417',['createProcessArray',['../class_chimera_t_k_1_1_device_p_v_manager.html#acfb69a04b5bf5efe06fa4fff9dea411a',1,'ChimeraTK::DevicePVManager::createProcessArray(SynchronizationDirection synchronizationDirection, const ChimeraTK::RegisterPath &amp;processVariableName, std::size_t size, const std::string &amp;unit=ChimeraTK::TransferElement::unitNotSet, const std::string &amp;description=&quot;&quot;, T initialValue=T(), std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})'],['../class_chimera_t_k_1_1_device_p_v_manager.html#a1c40986b3bd7a3d8fc680e4ff67d37c1',1,'ChimeraTK::DevicePVManager::createProcessArray(SynchronizationDirection synchronizationDirection, const ChimeraTK::RegisterPath &amp;processVariableName, const std::vector&lt; T &gt; &amp;initialValue, const std::string &amp;unit=ChimeraTK::TransferElement::unitNotSet, const std::string &amp;description=&quot;&quot;, std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})']]],
  ['createprocessarraycontrolsystemtodevice_418',['createProcessArrayControlSystemToDevice',['../class_chimera_t_k_1_1_p_v_manager.html#adf2db7a2cf25f95167f94ea9b22983d0',1,'ChimeraTK::PVManager']]],
  ['createprocessarraydevicetocontrolsystem_419',['createProcessArrayDeviceToControlSystem',['../class_chimera_t_k_1_1_p_v_manager.html#a3674039ce0118eafc44f6ecdfd31bd0a',1,'ChimeraTK::PVManager']]],
  ['createpvmanager_420',['createPVManager',['../namespace_chimera_t_k.html#a2da887c3ca7c2351d7d6331b5636bd24',1,'ChimeraTK']]],
  ['createsynchronizedprocessarray_421',['createSynchronizedProcessArray',['../namespace_chimera_t_k.html#ac4267298283650894fb5cd0a843d7504',1,'ChimeraTK::createSynchronizedProcessArray(std::size_t size, const ChimeraTK::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, T initialValue=T(), std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})'],['../namespace_chimera_t_k.html#a0615f64225f18201afa045e8eb0d7187',1,'ChimeraTK::createSynchronizedProcessArray(const std::vector&lt; T &gt; &amp;initialValue, const ChimeraTK::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})']]]
];
