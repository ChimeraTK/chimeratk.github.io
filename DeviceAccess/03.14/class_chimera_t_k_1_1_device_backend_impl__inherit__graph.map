<map id="ChimeraTK::DeviceBackendImpl" name="ChimeraTK::DeviceBackendImpl">
<area shape="rect" id="node1" title="DeviceBackendImpl implements some basic functionality which should be available for all backends." alt="" coords="525,465,756,492"/>
<area shape="rect" id="node4" href="$class_async_test_dummy.html" title=" " alt="" coords="856,312,995,339"/>
<area shape="rect" id="node5" href="$class_chimera_t_k_1_1_logical_name_mapping_backend.html" title="Backend to map logical register names onto real hardware registers." alt="" coords="804,363,1047,405"/>
<area shape="rect" id="node7" href="$class_chimera_t_k_1_1_numeric_addressed_backend.html" title="Base class for address&#45;based device backends (e.g." alt="" coords="813,429,1038,470"/>
<area shape="rect" id="node29" href="$class_chimera_t_k_1_1_subdevice_backend.html" title="Backend for subdevices which are passed through some register or area of another device (subsequently..." alt="" coords="813,495,1037,521"/>
<area shape="rect" id="node30" href="$struct_chimera_t_k_1_1_unified_backend_test_1_1_exception_reporting_backend.html" title="Special DeviceBackend used for testing the exception reporting to the backend." alt="" coords="804,545,1047,601"/>
<area shape="rect" id="node31" href="$class_example_backend.html" title="An Example to show how to write a backend device class and add it to the factory." alt="" coords="858,625,993,652"/>
<area shape="rect" id="node2" href="$class_chimera_t_k_1_1_device_backend.html" title="The base class for backends providing IO functionality for the Device class." alt="" coords="275,465,477,492"/>
<area shape="rect" id="node3" title=" " alt="" coords="5,458,227,499"/>
<area shape="rect" id="node6" href="$struct_dummy_for_cleanup_check.html" title=" " alt="" coords="1122,309,1309,336"/>
<area shape="rect" id="node8" href="$class_chimera_t_k_1_1_dummy_backend_base.html" title="Base class for DummyBackends, provides common functionality." alt="" coords="1095,360,1336,387"/>
<area shape="rect" id="node25" href="$class_chimera_t_k_1_1_pcie_backend.html" title="A class to provide the Pcie device functionality." alt="" coords="1123,411,1307,437"/>
<area shape="rect" id="node26" href="$class_chimera_t_k_1_1_rebot_backend.html" title=" " alt="" coords="1118,461,1313,488"/>
<area shape="rect" id="node27" href="$class_chimera_t_k_1_1_uio_backend.html" title=" " alt="" coords="1126,512,1305,539"/>
<area shape="rect" id="node28" href="$class_chimera_t_k_1_1_xdma_backend.html" title=" " alt="" coords="1118,563,1313,589"/>
<area shape="rect" id="node9" href="$class_chimera_t_k_1_1_dummy_backend.html" title="The dummy device opens a mapping file instead of a device, and implements all registers defined in th..." alt="" coords="1407,335,1616,361"/>
<area shape="rect" id="node24" href="$class_chimera_t_k_1_1_shared_dummy_backend.html" title="The shared dummy device opens a mapping file defining the registers and implements them in shared mem..." alt="" coords="1384,385,1639,412"/>
<area shape="rect" id="node10" href="$struct_another_working_backend.html" title=" " alt="" coords="1721,5,1903,32"/>
<area shape="rect" id="node11" href="$class_chimera_t_k_1_1_exception_dummy.html" title=" " alt="" coords="1703,56,1921,83"/>
<area shape="rect" id="node14" href="$class_custom_backend.html" title=" " alt="" coords="1749,107,1875,133"/>
<area shape="rect" id="node15" href="$struct_dummy_for_area_handshake_backend.html" title=" " alt="" coords="1687,157,1937,184"/>
<area shape="rect" id="node16" href="$class_invalid_dummy_backend.html" title=" " alt="" coords="1725,208,1899,235"/>
<area shape="rect" id="node17" href="$struct_new_backend.html" title=" " alt="" coords="1759,259,1865,285"/>
<area shape="rect" id="node18" href="$struct_not_registering_plugin.html" title="This backend does register, so loading the plugin will go wrong." alt="" coords="1733,309,1891,336"/>
<area shape="rect" id="node19" href="$class_test_dummy.html" title=" " alt="" coords="1762,360,1862,387"/>
<area shape="rect" id="node20" href="$class_testable_dummy_backend.html" title="The TestableDummybackend is derived from DummyBackend to get access to the protected members." alt="" coords="1721,411,1903,437"/>
<area shape="rect" id="node21" href="$struct_working_backend.html" title=" " alt="" coords="1747,461,1877,488"/>
<area shape="rect" id="node22" href="$struct_write_counting_backend.html" title=" " alt="" coords="1727,512,1897,539"/>
<area shape="rect" id="node23" href="$struct_wrong_version_backend.html" title=" " alt="" coords="1729,563,1895,589"/>
<area shape="rect" id="node12" href="$class_decorator_backend.html" title=" " alt="" coords="2014,31,2155,57"/>
<area shape="rect" id="node13" href="$struct_dummy_for_double_buffering.html" title="dummy backend used for testing the double buffering handshake." alt="" coords="1985,81,2184,108"/>
</map>
