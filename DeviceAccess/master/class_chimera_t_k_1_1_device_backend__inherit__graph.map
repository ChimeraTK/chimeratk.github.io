<map id="ChimeraTK::DeviceBackend" name="ChimeraTK::DeviceBackend">
<area shape="rect" id="node1" title="The base class for backends providing IO functionality for the Device class." alt="" coords="275,430,477,457"/>
<area shape="rect" id="node3" href="$class_chimera_t_k_1_1_device_backend_impl.html" title="DeviceBackendImpl implements some basic functionality which should be available for all backends." alt="" coords="525,430,756,457"/>
<area shape="rect" id="node2" title=" " alt="" coords="5,423,227,464"/>
<area shape="rect" id="node4" href="$class_async_test_dummy.html" title=" " alt="" coords="856,249,995,275"/>
<area shape="rect" id="node5" href="$class_chimera_t_k_1_1_logical_name_mapping_backend.html" title="Backend to map logical register names onto real hardware registers." alt="" coords="1390,136,1633,177"/>
<area shape="rect" id="node7" href="$class_chimera_t_k_1_1_numeric_addressed_backend.html" title="Base class for address&#45;based device backends (e.g." alt="" coords="813,393,1038,435"/>
<area shape="rect" id="node29" href="$class_chimera_t_k_1_1_subdevice_backend.html" title="Backend for subdevices which are passed through some register or area of another device (subsequently..." alt="" coords="813,459,1037,486"/>
<area shape="rect" id="node30" href="$struct_chimera_t_k_1_1_unified_backend_test_1_1_exception_reporting_backend.html" title="Special DeviceBackend used for testing the exception reporting to the backend." alt="" coords="804,510,1047,566"/>
<area shape="rect" id="node31" href="$class_example_backend.html" title="An Example to show how to write a backend device class and add it to the factory." alt="" coords="858,590,993,617"/>
<area shape="rect" id="node6" href="$struct_dummy_for_cleanup_check.html" title=" " alt="" coords="1991,9,2178,35"/>
<area shape="rect" id="node8" href="$class_chimera_t_k_1_1_dummy_backend_base.html" title="Base class for DummyBackends, provides common functionality." alt="" coords="1095,350,1336,377"/>
<area shape="rect" id="node25" href="$class_chimera_t_k_1_1_pcie_backend.html" title="A class to provide the Pcie device functionality." alt="" coords="1123,401,1307,427"/>
<area shape="rect" id="node26" href="$class_chimera_t_k_1_1_rebot_backend.html" title=" " alt="" coords="1118,451,1313,478"/>
<area shape="rect" id="node27" href="$class_chimera_t_k_1_1_uio_backend.html" title=" " alt="" coords="1126,502,1305,529"/>
<area shape="rect" id="node28" href="$class_chimera_t_k_1_1_xdma_backend.html" title=" " alt="" coords="1118,553,1313,579"/>
<area shape="rect" id="node9" href="$class_chimera_t_k_1_1_dummy_backend.html" title="The dummy device opens a mapping file instead of a device, and implements all registers defined in th..." alt="" coords="1407,350,1616,377"/>
<area shape="rect" id="node24" href="$class_chimera_t_k_1_1_shared_dummy_backend.html" title="The shared dummy device opens a mapping file defining the registers and implements them in shared mem..." alt="" coords="1384,401,1639,427"/>
<area shape="rect" id="node10" href="$struct_another_working_backend.html" title=" " alt="" coords="1721,46,1903,73"/>
<area shape="rect" id="node11" href="$class_chimera_t_k_1_1_exception_dummy.html" title=" " alt="" coords="1703,97,1921,123"/>
<area shape="rect" id="node14" href="$class_custom_backend.html" title=" " alt="" coords="1749,147,1875,174"/>
<area shape="rect" id="node15" href="$struct_dummy_for_area_handshake_backend.html" title=" " alt="" coords="1687,198,1937,225"/>
<area shape="rect" id="node16" href="$class_invalid_dummy_backend.html" title=" " alt="" coords="1725,249,1899,275"/>
<area shape="rect" id="node17" href="$struct_new_backend.html" title=" " alt="" coords="1759,299,1865,326"/>
<area shape="rect" id="node18" href="$struct_not_registering_plugin.html" title="This backend does register, so loading the plugin will go wrong." alt="" coords="1733,350,1891,377"/>
<area shape="rect" id="node19" href="$class_test_dummy.html" title=" " alt="" coords="1762,401,1862,427"/>
<area shape="rect" id="node20" href="$class_testable_dummy_backend.html" title="The TestableDummybackend is derived from DummyBackend to get access to the protected members." alt="" coords="1721,451,1903,478"/>
<area shape="rect" id="node21" href="$struct_working_backend.html" title=" " alt="" coords="1747,502,1877,529"/>
<area shape="rect" id="node22" href="$struct_write_counting_backend.html" title=" " alt="" coords="1727,553,1897,579"/>
<area shape="rect" id="node23" href="$struct_wrong_version_backend.html" title=" " alt="" coords="1729,603,1895,630"/>
<area shape="rect" id="node12" href="$class_decorator_backend.html" title=" " alt="" coords="2014,85,2155,111"/>
<area shape="rect" id="node13" href="$struct_dummy_for_double_buffering.html" title="dummy backend used for testing the double buffering handshake." alt="" coords="1985,135,2184,162"/>
</map>
