var annotated_dup =
[
    [ "accessPrivateData", "namespaceaccess_private_data.html", "namespaceaccess_private_data" ],
    [ "ChimeraTK", "namespace_chimera_t_k.html", "namespace_chimera_t_k" ],
    [ "std", null, [
      [ "hash< ChimeraTK::TransferElementID >", "structstd_1_1hash_3_01_chimera_t_k_1_1_transfer_element_i_d_01_4.html", "structstd_1_1hash_3_01_chimera_t_k_1_1_transfer_element_i_d_01_4" ],
      [ "less< ChimeraTK::TransferElementID >", "structstd_1_1less_3_01_chimera_t_k_1_1_transfer_element_i_d_01_4.html", "structstd_1_1less_3_01_chimera_t_k_1_1_transfer_element_i_d_01_4" ]
    ] ],
    [ "_pcieuni_ioctl_bar_sizes", "struct__pcieuni__ioctl__bar__sizes.html", "struct__pcieuni__ioctl__bar__sizes" ],
    [ "Accessor", "class_accessor.html", "class_accessor" ],
    [ "AcknowledgeTest", "struct_acknowledge_test.html", "struct_acknowledge_test" ],
    [ "Active0", "struct_active0.html", "struct_active0" ],
    [ "Adder", "struct_adder.html", null ],
    [ "Adder< std::string, IMPL_T >", "struct_adder_3_01std_1_1string_00_01_i_m_p_l___t_01_4.html", null ],
    [ "Adder< std::string, int8_t >", "struct_adder_3_01std_1_1string_00_01int8__t_01_4.html", null ],
    [ "Adder< std::string, uint8_t >", "struct_adder_3_01std_1_1string_00_01uint8__t_01_4.html", null ],
    [ "AnotherWorkingBackend", "struct_another_working_backend.html", "struct_another_working_backend" ],
    [ "AreaType", "struct_area_type.html", "struct_area_type" ],
    [ "Argument", "struct_argument.html", "struct_argument" ],
    [ "AsciiData", "struct_ascii_data.html", "struct_ascii_data" ],
    [ "AsyncTestDummy", "class_async_test_dummy.html", "class_async_test_dummy" ],
    [ "BackendRegisterer", "class_backend_registerer.html", "class_backend_registerer" ],
    [ "BitRangeAccessorTarget", "struct_bit_range_accessor_target.html", "struct_bit_range_accessor_target" ],
    [ "BitRegisterDescriptorBase", "struct_bit_register_descriptor_base.html", "struct_bit_register_descriptor_base" ],
    [ "BoolAsVoid", "struct_bool_as_void.html", "struct_bool_as_void" ],
    [ "ByteRaw_fixedPoint8_4s", "struct_byte_raw__fixed_point8__4s.html", "struct_byte_raw__fixed_point8__4s" ],
    [ "ByteRaw_fixedPoint8_4u", "struct_byte_raw__fixed_point8__4u.html", "struct_byte_raw__fixed_point8__4u" ],
    [ "ByteRaw_signed8", "struct_byte_raw__signed8.html", "struct_byte_raw__signed8" ],
    [ "ByteRaw_unsigned8", "struct_byte_raw__unsigned8.html", "struct_byte_raw__unsigned8" ],
    [ "canonicalInterrupt4_8_2", "structcanonical_interrupt4__8__2.html", null ],
    [ "canonicalInterrupt4_8_3", "structcanonical_interrupt4__8__3.html", null ],
    [ "canonicalInterrupt4_8a", "structcanonical_interrupt4__8a.html", null ],
    [ "canonicalInterrupt4_8b", "structcanonical_interrupt4__8b.html", null ],
    [ "canonicalInterrupt4a", "structcanonical_interrupt4a.html", "structcanonical_interrupt4a" ],
    [ "canonicalInterrupt4b", "structcanonical_interrupt4b.html", "structcanonical_interrupt4b" ],
    [ "canonicalInterrupt5", "structcanonical_interrupt5.html", "structcanonical_interrupt5" ],
    [ "canonicalInterrupt5_9", "structcanonical_interrupt5__9.html", null ],
    [ "canonicalInterrupt6", "structcanonical_interrupt6.html", "structcanonical_interrupt6" ],
    [ "CatalogueGenerator", "class_catalogue_generator.html", "class_catalogue_generator" ],
    [ "ChannelRegisterDescriptorBase", "struct_channel_register_descriptor_base.html", "struct_channel_register_descriptor_base" ],
    [ "CieWritableTestFixture", "struct_cie_writable_test_fixture.html", "struct_cie_writable_test_fixture" ],
    [ "ConstantRegisterDescriptorBase", "struct_constant_register_descriptor_base.html", "struct_constant_register_descriptor_base" ],
    [ "CountingDecorator", "struct_counting_decorator.html", "struct_counting_decorator" ],
    [ "CustomBackend", "class_custom_backend.html", "class_custom_backend" ],
    [ "datafrom4_8_2", "structdatafrom4__8__2.html", "structdatafrom4__8__2" ],
    [ "datafrom4_8_3", "structdatafrom4__8__3.html", "structdatafrom4__8__3" ],
    [ "datafrom5_9", "structdatafrom5__9.html", null ],
    [ "datafrom6", "structdatafrom6.html", null ],
    [ "DecoratorBackend", "class_decorator_backend.html", "class_decorator_backend" ],
    [ "DecoratorTestAccessor", "class_decorator_test_accessor.html", "class_decorator_test_accessor" ],
    [ "device_ioctrl_data", "structdevice__ioctrl__data.html", "structdevice__ioctrl__data" ],
    [ "device_ioctrl_dma", "structdevice__ioctrl__dma.html", "structdevice__ioctrl__dma" ],
    [ "device_ioctrl_time", "structdevice__ioctrl__time.html", "structdevice__ioctrl__time" ],
    [ "device_rw", "structdevice__rw.html", "structdevice__rw" ],
    [ "DeviceFixture", "struct_device_fixture.html", "struct_device_fixture" ],
    [ "DeviceFixture2D", "struct_device_fixture2_d.html", "struct_device_fixture2_d" ],
    [ "DeviceFixture2D_DAQ0", "struct_device_fixture2_d___d_a_q0.html", "struct_device_fixture2_d___d_a_q0" ],
    [ "DeviceFixture2D_DAQ2", "struct_device_fixture2_d___d_a_q2.html", "struct_device_fixture2_d___d_a_q2" ],
    [ "DeviceFixture_HW", "struct_device_fixture___h_w.html", "struct_device_fixture___h_w" ],
    [ "DeviceInfoMapTest", "class_device_info_map_test.html", "class_device_info_map_test" ],
    [ "DeviceInfoMapTestSuite", "class_device_info_map_test_suite.html", "class_device_info_map_test_suite" ],
    [ "DMapFileParserTest", "class_d_map_file_parser_test.html", "class_d_map_file_parser_test" ],
    [ "DMapFileParserTestSuite", "class_d_map_file_parser_test_suite.html", "class_d_map_file_parser_test_suite" ],
    [ "DummyFixture", "struct_dummy_fixture.html", "struct_dummy_fixture" ],
    [ "DummyForAreaHandshakeBackend", "struct_dummy_for_area_handshake_backend.html", "struct_dummy_for_area_handshake_backend" ],
    [ "DummyForCleanupCheck", "struct_dummy_for_cleanup_check.html", "struct_dummy_for_cleanup_check" ],
    [ "DummyForDoubleBuffering", "struct_dummy_for_double_buffering.html", "struct_dummy_for_double_buffering" ],
    [ "DummyProtocolImplementor", "struct_dummy_protocol_implementor.html", "struct_dummy_protocol_implementor" ],
    [ "DummyRegisterTest", "class_dummy_register_test.html", "class_dummy_register_test" ],
    [ "DummyRegisterTestSuite", "class_dummy_register_test_suite.html", "class_dummy_register_test_suite" ],
    [ "F", "struct_f.html", "struct_f" ],
    [ "Fixture", "struct_fixture.html", "struct_fixture" ],
    [ "Fixture_t", "class_fixture__t.html", "class_fixture__t" ],
    [ "GieActiveTestFixture", "struct_gie_active_test_fixture.html", "struct_gie_active_test_fixture" ],
    [ "GieAndMerTestFixture", "struct_gie_and_mer_test_fixture.html", "struct_gie_and_mer_test_fixture" ],
    [ "GieInactiveTestFixture", "struct_gie_inactive_test_fixture.html", "struct_gie_inactive_test_fixture" ],
    [ "GieWritableTestFixture", "struct_gie_writable_test_fixture.html", "struct_gie_writable_test_fixture" ],
    [ "HelperProcess", "struct_helper_process.html", "struct_helper_process" ],
    [ "IarAndIcrTestFixture", "struct_iar_and_icr_test_fixture.html", "struct_iar_and_icr_test_fixture" ],
    [ "IarTestFixture", "struct_iar_test_fixture.html", "struct_iar_test_fixture" ],
    [ "IarWritableTestFixture", "struct_iar_writable_test_fixture.html", "struct_iar_writable_test_fixture" ],
    [ "IcrTestFixture", "struct_icr_test_fixture.html", "struct_icr_test_fixture" ],
    [ "IcrWritableTestFixture", "struct_icr_writable_test_fixture.html", "struct_icr_writable_test_fixture" ],
    [ "IerWritableTestFixture", "struct_ier_writable_test_fixture.html", "struct_ier_writable_test_fixture" ],
    [ "Inactive0", "struct_inactive0.html", "struct_inactive0" ],
    [ "Inactive5", "struct_inactive5.html", "struct_inactive5" ],
    [ "Integers_base", "struct_integers__base.html", "struct_integers__base" ],
    [ "Integers_signed32", "struct_integers__signed32.html", "struct_integers__signed32" ],
    [ "Integers_signed32_async", "struct_integers__signed32__async.html", "struct_integers__signed32__async" ],
    [ "Integers_signed32_async_rw", "struct_integers__signed32__async__rw.html", "struct_integers__signed32__async__rw" ],
    [ "Integers_signed32_DummyWritable", "struct_integers__signed32___dummy_writable.html", "struct_integers__signed32___dummy_writable" ],
    [ "Integers_signed32_RO", "struct_integers__signed32___r_o.html", "struct_integers__signed32___r_o" ],
    [ "Integers_signed32_WO", "struct_integers__signed32___w_o.html", "struct_integers__signed32___w_o" ],
    [ "interrupt4_8_2", "structinterrupt4__8__2.html", null ],
    [ "interrupt4_8_3", "structinterrupt4__8__3.html", null ],
    [ "interrupt5_9", "structinterrupt5__9.html", null ],
    [ "interrupt6", "structinterrupt6.html", "structinterrupt6" ],
    [ "Interrupt_dummy", "struct_interrupt__dummy.html", "struct_interrupt__dummy" ],
    [ "InvalidDummyBackend", "class_invalid_dummy_backend.html", "class_invalid_dummy_backend" ],
    [ "InvalidJson1TestFixture", "struct_invalid_json1_test_fixture.html", "struct_invalid_json1_test_fixture" ],
    [ "InvalidJson2TestFixture", "struct_invalid_json2_test_fixture.html", "struct_invalid_json2_test_fixture" ],
    [ "IsrReadableTestFixture", "struct_isr_readable_test_fixture.html", "struct_isr_readable_test_fixture" ],
    [ "IsrTestFixture", "struct_isr_test_fixture.html", "struct_isr_test_fixture" ],
    [ "IsrWritableTestFixture", "struct_isr_writable_test_fixture.html", "struct_isr_writable_test_fixture" ],
    [ "MasterEnableTest", "struct_master_enable_test.html", "struct_master_enable_test" ],
    [ "MerActiveTestFixture", "struct_mer_active_test_fixture.html", "struct_mer_active_test_fixture" ],
    [ "MerInactiveTestFixture", "struct_mer_inactive_test_fixture.html", "struct_mer_inactive_test_fixture" ],
    [ "MerWritableTestFixture", "struct_mer_writable_test_fixture.html", "struct_mer_writable_test_fixture" ],
    [ "MieActiveTestFixture", "struct_mie_active_test_fixture.html", "struct_mie_active_test_fixture" ],
    [ "MieAndGieTestFixture", "struct_mie_and_gie_test_fixture.html", "struct_mie_and_gie_test_fixture" ],
    [ "MieAndMerTestFixture", "struct_mie_and_mer_test_fixture.html", "struct_mie_and_mer_test_fixture" ],
    [ "MieGieAndMerTestFixture", "struct_mie_gie_and_mer_test_fixture.html", "struct_mie_gie_and_mer_test_fixture" ],
    [ "MieInactiveTestFixture", "struct_mie_inactive_test_fixture.html", "struct_mie_inactive_test_fixture" ],
    [ "MieWritableTestFixture", "struct_mie_writable_test_fixture.html", "struct_mie_writable_test_fixture" ],
    [ "MuxedArea1", "struct_muxed_area1.html", "struct_muxed_area1" ],
    [ "MuxedArea2", "struct_muxed_area2.html", "struct_muxed_area2" ],
    [ "MuxedFloat", "struct_muxed_float.html", "struct_muxed_float" ],
    [ "MuxedNodma", "struct_muxed_nodma.html", "struct_muxed_nodma" ],
    [ "MuxedNodmaAsync", "struct_muxed_nodma_async.html", "struct_muxed_nodma_async" ],
    [ "MyArea1", "struct_my_area1.html", "struct_my_area1" ],
    [ "MyRegister1", "struct_my_register1.html", "struct_my_register1" ],
    [ "myRegisterInfo", "classmy_register_info.html", "classmy_register_info" ],
    [ "NewBackend", "struct_new_backend.html", null ],
    [ "NoIerTestFixture", "struct_no_ier_test_fixture.html", "struct_no_ier_test_fixture" ],
    [ "NoIsrTestFixture", "struct_no_isr_test_fixture.html", "struct_no_isr_test_fixture" ],
    [ "NonexistendPathTestFixture", "struct_nonexistend_path_test_fixture.html", "struct_nonexistend_path_test_fixture" ],
    [ "NoPathTestFixture", "struct_no_path_test_fixture.html", "struct_no_path_test_fixture" ],
    [ "NotRegisteringPlugin", "struct_not_registering_plugin.html", null ],
    [ "NumericAddressedLowLevelTransferElement_numberOfBytes", "struct_numeric_addressed_low_level_transfer_element__number_of_bytes.html", "struct_numeric_addressed_low_level_transfer_element__number_of_bytes" ],
    [ "NumericAddressedLowLevelTransferElement_startAddress", "struct_numeric_addressed_low_level_transfer_element__start_address.html", "struct_numeric_addressed_low_level_transfer_element__start_address" ],
    [ "OneDRegisterDescriptorBase", "struct_one_d_register_descriptor_base.html", "struct_one_d_register_descriptor_base" ],
    [ "OnlyCieTestFixture", "struct_only_cie_test_fixture.html", "struct_only_cie_test_fixture" ],
    [ "OnlySieTestFixture", "struct_only_sie_test_fixture.html", "struct_only_sie_test_fixture" ],
    [ "ParserUtilitiesTestSuite", "class_parser_utilities_test_suite.html", "class_parser_utilities_test_suite" ],
    [ "ParserUtilsTestClass", "class_parser_utils_test_class.html", "class_parser_utils_test_class" ],
    [ "PcieBackendTest", "class_pcie_backend_test.html", "class_pcie_backend_test" ],
    [ "PcieBackendTestSuite", "class_pcie_backend_test_suite.html", "class_pcie_backend_test_suite" ],
    [ "RawToCookedProvider_BitWithMath", "struct_raw_to_cooked_provider___bit_with_math.html", null ],
    [ "RawToCookedProvider_Var1", "struct_raw_to_cooked_provider___var1.html", null ],
    [ "RawToCookedProvider_Var2", "struct_raw_to_cooked_provider___var2.html", null ],
    [ "RawToCookedProvider_x", "struct_raw_to_cooked_provider__x.html", null ],
    [ "RawUioAccess", "class_raw_uio_access.html", "class_raw_uio_access" ],
    [ "RebotDeviceTestSuite", "class_rebot_device_test_suite.html", "class_rebot_device_test_suite" ],
    [ "RebotServerDetails", "struct_rebot_server_details.html", "struct_rebot_server_details" ],
    [ "RebotTestClass", "class_rebot_test_class.html", "class_rebot_test_class" ],
    [ "Reg9BitsInChar", "struct_reg9_bits_in_char.html", "struct_reg9_bits_in_char" ],
    [ "RegArrayConstant", "struct_reg_array_constant.html", "struct_reg_array_constant" ],
    [ "RegArrayVariable", "struct_reg_array_variable.html", "struct_reg_array_variable" ],
    [ "RegBit0OfVar", "struct_reg_bit0_of_var.html", "struct_reg_bit0_of_var" ],
    [ "RegBit2OfWordFirmware", "struct_reg_bit2_of_word_firmware.html", "struct_reg_bit2_of_word_firmware" ],
    [ "RegBit2OfWordFirmware_push", "struct_reg_bit2_of_word_firmware__push.html", "struct_reg_bit2_of_word_firmware__push" ],
    [ "RegBit2OfWordFirmwareB", "struct_reg_bit2_of_word_firmware_b.html", "struct_reg_bit2_of_word_firmware_b" ],
    [ "RegBit3OfVar", "struct_reg_bit3_of_var.html", "struct_reg_bit3_of_var" ],
    [ "RegBitRangeDescriptor", "struct_reg_bit_range_descriptor.html", "struct_reg_bit_range_descriptor" ],
    [ "RegChannel3", "struct_reg_channel3.html", "struct_reg_channel3" ],
    [ "RegChannel4_push", "struct_reg_channel4__push.html", "struct_reg_channel4__push" ],
    [ "RegChannelLast", "struct_reg_channel_last.html", "struct_reg_channel_last" ],
    [ "RegConstant", "struct_reg_constant.html", "struct_reg_constant" ],
    [ "RegConstant2", "struct_reg_constant2.html", "struct_reg_constant2" ],
    [ "RegFullArea", "struct_reg_full_area.html", "struct_reg_full_area" ],
    [ "RegFullAreaScaled", "struct_reg_full_area_scaled.html", "struct_reg_full_area_scaled" ],
    [ "RegisterDescriptorBase", "struct_register_descriptor_base.html", "struct_register_descriptor_base" ],
    [ "RegisterPathTest", "class_register_path_test.html", "class_register_path_test" ],
    [ "RegisterPathTestSuite", "class_register_path_test_suite.html", "class_register_path_test_suite" ],
    [ "RegLowerHalfOfFirmware", "struct_reg_lower_half_of_firmware.html", "struct_reg_lower_half_of_firmware" ],
    [ "RegMonostableTrigger", "struct_reg_monostable_trigger.html", "struct_reg_monostable_trigger" ],
    [ "RegPartOfArea", "struct_reg_part_of_area.html", "struct_reg_part_of_area" ],
    [ "RegRedirectedBitWithMath", "struct_reg_redirected_bit_with_math.html", "struct_reg_redirected_bit_with_math" ],
    [ "Regs3Type", "struct_regs3_type.html", "struct_regs3_type" ],
    [ "RegSingleWord", "struct_reg_single_word.html", "struct_reg_single_word" ],
    [ "RegSingleWord_push", "struct_reg_single_word__push.html", "struct_reg_single_word__push" ],
    [ "RegSingleWordB", "struct_reg_single_word_b.html", "struct_reg_single_word_b" ],
    [ "RegSingleWordScaled", "struct_reg_single_word_scaled.html", "struct_reg_single_word_scaled" ],
    [ "RegSingleWordScaled_R", "struct_reg_single_word_scaled___r.html", "struct_reg_single_word_scaled___r" ],
    [ "RegSingleWordScaled_RW", "struct_reg_single_word_scaled___r_w.html", "struct_reg_single_word_scaled___r_w" ],
    [ "RegSingleWordScaled_W", "struct_reg_single_word_scaled___w.html", "struct_reg_single_word_scaled___w" ],
    [ "RegSingleWordScaledTwice_push", "struct_reg_single_word_scaled_twice__push.html", "struct_reg_single_word_scaled_twice__push" ],
    [ "RegUpperHalfOfFirmware", "struct_reg_upper_half_of_firmware.html", "struct_reg_upper_half_of_firmware" ],
    [ "RegVariable", "struct_reg_variable.html", "struct_reg_variable" ],
    [ "RegVariableAsPushParameterInMath_not_written", "struct_reg_variable_as_push_parameter_in_math__not__written.html", "struct_reg_variable_as_push_parameter_in_math__not__written" ],
    [ "RegVariableAsPushParameterInMath_var1", "struct_reg_variable_as_push_parameter_in_math__var1.html", "struct_reg_variable_as_push_parameter_in_math__var1" ],
    [ "RegVariableAsPushParameterInMath_var1_not_written1", "struct_reg_variable_as_push_parameter_in_math__var1__not__written1.html", "struct_reg_variable_as_push_parameter_in_math__var1__not__written1" ],
    [ "RegVariableAsPushParameterInMath_var1_not_written2", "struct_reg_variable_as_push_parameter_in_math__var1__not__written2.html", "struct_reg_variable_as_push_parameter_in_math__var1__not__written2" ],
    [ "RegVariableAsPushParameterInMath_var2", "struct_reg_variable_as_push_parameter_in_math__var2.html", "struct_reg_variable_as_push_parameter_in_math__var2" ],
    [ "RegVariableAsPushParameterInMath_x", "struct_reg_variable_as_push_parameter_in_math__x.html", "struct_reg_variable_as_push_parameter_in_math__x" ],
    [ "RegVariableAsPushParameterInMath_x_not_written1", "struct_reg_variable_as_push_parameter_in_math__x__not__written1.html", "struct_reg_variable_as_push_parameter_in_math__x__not__written1" ],
    [ "RegVariableAsPushParameterInMath_x_not_written2", "struct_reg_variable_as_push_parameter_in_math__x__not__written2.html", "struct_reg_variable_as_push_parameter_in_math__x__not__written2" ],
    [ "RegVariableAsPushParameterInMathBase", "struct_reg_variable_as_push_parameter_in_math_base.html", "struct_reg_variable_as_push_parameter_in_math_base" ],
    [ "RegWordFirmwareAsParameterInMath", "struct_reg_word_firmware_as_parameter_in_math.html", "struct_reg_word_firmware_as_parameter_in_math" ],
    [ "RegWordFirmwareForcedReadOnly", "struct_reg_word_firmware_forced_read_only.html", "struct_reg_word_firmware_forced_read_only" ],
    [ "RegWordFirmwareForcedReadOnly_push", "struct_reg_word_firmware_forced_read_only__push.html", "struct_reg_word_firmware_forced_read_only__push" ],
    [ "RegWordFirmwareWithMath", "struct_reg_word_firmware_with_math.html", "struct_reg_word_firmware_with_math" ],
    [ "RegWordFirmwareWithMath_R", "struct_reg_word_firmware_with_math___r.html", "struct_reg_word_firmware_with_math___r" ],
    [ "RegWordFirmwareWithMath_R_push", "struct_reg_word_firmware_with_math___r__push.html", "struct_reg_word_firmware_with_math___r__push" ],
    [ "RegWordFirmwareWithMath_W", "struct_reg_word_firmware_with_math___w.html", "struct_reg_word_firmware_with_math___w" ],
    [ "Scalar32", "struct_scalar32.html", null ],
    [ "Scalar32Async", "struct_scalar32_async.html", null ],
    [ "ScalarDescriptor", "struct_scalar_descriptor.html", "struct_scalar_descriptor" ],
    [ "ScalarRegisterDescriptorBase", "struct_scalar_register_descriptor_base.html", "struct_scalar_register_descriptor_base" ],
    [ "ShortRaw_base", "struct_short_raw__base.html", "struct_short_raw__base" ],
    [ "ShortRaw_fixedPoint16_8s", "struct_short_raw__fixed_point16__8s.html", "struct_short_raw__fixed_point16__8s" ],
    [ "ShortRaw_fixedPoint16_8u", "struct_short_raw__fixed_point16__8u.html", "struct_short_raw__fixed_point16__8u" ],
    [ "ShortRaw_signed16", "struct_short_raw__signed16.html", "struct_short_raw__signed16" ],
    [ "ShortRaw_unsigned16", "struct_short_raw__unsigned16.html", "struct_short_raw__unsigned16" ],
    [ "SieWritableTestFixture", "struct_sie_writable_test_fixture.html", "struct_sie_writable_test_fixture" ],
    [ "StaticCore", "struct_static_core.html", "struct_static_core" ],
    [ "TestableDevice", "class_testable_device.html", "class_testable_device" ],
    [ "TestableDummyBackend", "class_testable_dummy_backend.html", "class_testable_dummy_backend" ],
    [ "TestDummy", "class_test_dummy.html", "class_test_dummy" ],
    [ "TestFixture", "struct_test_fixture.html", "struct_test_fixture" ],
    [ "TestLocker", "struct_test_locker.html", "struct_test_locker" ],
    [ "TestParameters", "struct_test_parameters.html", "struct_test_parameters" ],
    [ "TestRegister", "struct_test_register.html", "struct_test_register" ],
    [ "TestRegisterCasted", "struct_test_register_casted.html", "struct_test_register_casted" ],
    [ "TestRegisterCastedAsync", "struct_test_register_casted_async.html", "struct_test_register_casted_async" ],
    [ "TestRegisterCastedAsyncRo", "struct_test_register_casted_async_ro.html", "struct_test_register_casted_async_ro" ],
    [ "TestRegisterRangeChecked", "struct_test_register_range_checked.html", "struct_test_register_range_checked" ],
    [ "TestRegisterRoCasted", "struct_test_register_ro_casted.html", "struct_test_register_ro_casted" ],
    [ "TestRegisterRoRangeChecked", "struct_test_register_ro_range_checked.html", "struct_test_register_ro_range_checked" ],
    [ "ThrowTestFixture", "struct_throw_test_fixture.html", "struct_throw_test_fixture" ],
    [ "TriggeredInt", "struct_triggered_int.html", "struct_triggered_int" ],
    [ "UnknownMainKeyTestFixture", "struct_unknown_main_key_test_fixture.html", "struct_unknown_main_key_test_fixture" ],
    [ "UnknownOptionTestFixture", "struct_unknown_option_test_fixture.html", "struct_unknown_option_test_fixture" ],
    [ "UnknownVersionTestFixture", "struct_unknown_version_test_fixture.html", "struct_unknown_version_test_fixture" ],
    [ "VariableRegisterDescriptorBase", "struct_variable_register_descriptor_base.html", "struct_variable_register_descriptor_base" ],
    [ "VersionNumberTest", "class_version_number_test.html", "class_version_number_test" ],
    [ "VersionNumberTestSuite", "class_version_number_test_suite.html", "class_version_number_test_suite" ],
    [ "WorkingBackend", "struct_working_backend.html", "struct_working_backend" ],
    [ "WriteCountingBackend", "struct_write_counting_backend.html", "struct_write_counting_backend" ],
    [ "WriteMonitoringBackend", "class_write_monitoring_backend.html", "class_write_monitoring_backend" ],
    [ "WrongVersionBackend", "struct_wrong_version_backend.html", "struct_wrong_version_backend" ]
];